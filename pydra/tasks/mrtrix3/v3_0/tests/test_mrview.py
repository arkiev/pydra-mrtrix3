# Auto-generated test for mrview

from fileformats.generic import File  # noqa
from fileformats.medimage import Nifti1  # noqa
from fileformats.medimage_mrtrix3 import ImageFormat, ImageIn, Tracks  # noqa
from pydra.tasks.mrtrix3.v3_0 import mrview


def test_mrview(tmp_path):
    task = mrview(
        image_=[Nifti1.sample()],
        mode=[1],
        load=[Nifti1.sample()],
        reset=[True],
        fov=[1.0],
        focus=[File.sample()],
        target=[list([1.0])],
        orientation=list([1.0]),
        voxel=[list([1.0])],
        volume=[list([1])],
        plane=[1],
        lock=[True],
        select_image=[1],
        autoscale=[True],
        interpolation=[True],
        colourmap=[1],
        noannotations=[True],
        comments=[True],
        voxelinfo=[True],
        orientlabel=[True],
        colourbar=[True],
        imagevisible=[True],
        intensity_range=[list([1.0])],
        size=[list([1])],
        position=[list([1])],
        fullscreen=True,
        exit=True,
        sync_focus=True,
        fps=True,
        overlay_load=[Nifti1.sample()],
        overlay_opacity=[1.0],
        overlay_colourmap=[1],
        overlay_colour=[list([1.0])],
        overlay_intensity=[list([1.0])],
        overlay_threshold_min=[1.0],
        overlay_threshold_max=[1.0],
        overlay_no_threshold_min=[True],
        overlay_no_threshold_max=[True],
        overlay_interpolation=[True],
        roi_load=[Nifti1.sample()],
        roi_opacity=[1.0],
        roi_colour=[list([1.0])],
        tractography_load=[File.sample()],
        tractography_thickness=[1.0],
        tractography_geometry="pseudotubes",
        tractography_opacity=[1.0],
        tractography_slab=[1.0],
        tractography_lighting=[True],
        tractography_colour=[list([1.0])],
        tractography_tsf_load=[File.sample()],
        tractography_tsf_range=[list([1.0])],
        tractography_tsf_thresh=[list([1.0])],
        tractography_tsf_colourmap=[1],
        odf_load_sh=[Nifti1.sample()],
        odf_load_tensor=[Nifti1.sample()],
        odf_load_dixel=[Nifti1.sample()],
        fixel_load=[Nifti1.sample()],
        connectome_init=Nifti1.sample(),
        connectome_load=[File.sample()],
        capture_folder=["a-string"],
        capture_prefix=["a-string"],
        capture_grab=[True],
        debug=True,
        force=True,
    )
    result = task(plugin="serial")
    assert not result.errored
